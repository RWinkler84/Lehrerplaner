- Checkbox ist bei Sindy immer gecheckt -> Daten aus der Datenbank beim Rendern der Task checken

- Task-Sortierung ist kaputt:
    -> bei Stundenplan-Updates muss geprüft werden:
        -> hat der Stundenplan eine veränderte Stundenzahl pro Fach?
            ja -> intern als neuen Stundenplan handeln, gültig ab Erstellungstag, wenn es der aktuell Plan ist (Achtung validUntil muss gesetzt werden, falls es einen späteren Plan bereits gibt)
                -> ist es ein zukünftiger Plan, wird der vorhergehende gelöscht und ersetzt 
            nein -> alle Tasks in der jeweiligen Woche auf den equivalenten Termin setzen (das wird witzig...)

    -> Tasks nach Datum und Timeslot sortieren

- 'Termin' als Standard im Subject-Select, auch ohne Klasse speicherbar und immer mit festem Termin
    -> erledigt, braucht aber noch Styling
    -> braucht eigenen type-> normal, sub, appointment
- special Chars escaping
- wenn fehler bei der datenbankverbindung auftreten, soll der state später gespeichert werden...

 
- Einstellungsmenu: 
    - was passiert, wenn ein Stundenplan angelegt wird, dessen Gültigkeit vor bereits geplanten Vertretungen liegt?
    - Gültigkeitsdatums eines Stundenplans bearbeiten
    - hover iOS fähig machen :-(

- wenn ein neuer Stundenplan mitten in der Woche gültig wird, wird das aktuell beim Rendern nicht berücksichtigt
    - beim Erstellen des Stundenplans gecancelte Lessons aus der LessonChanges löschen, falls diese im Gültigkeitsbereich des neuen Plans liegen

erledigt: 

- mouseout für weekOverview, der addTaskButton löscht <- hat so nicht funktioniert.
bin einen Umweg über CSS gegangen. der addtaskButtonWrapper wird nur angezeigt, wenn die Maus
über der WeekOverview hovert
- anlegen neuer aufgaben
- animation beim wochenwechsel
- beim Anlegen einer Aufgabe einen Zeitstempel für die zugehörige Stunden (Slot, Datum) erzeugen
    -> Zeit und Datum in der createTaskForm aus dem target auslesen und ins tr packen
- toogleButtons ist kaputt
- css-Klassen der Lessons im Timetable beim Erzeugen aus den Daten der Datenbank holen
- Änderungen an den Tasks sollten sich auch im Timetable wiederspiegeln, wenn es Fach und Klasse betrifft
- edit Task so erweitern, dass Änderungen des Selects in das TD übernommen werden
- higlighting für Stunden, wenn über aufgaben gehovert wird
- discardTaskChanges anlegen für den Fall, dass man Änderungen an einer bestehenden Task rückgängig machen will
- es gibt einen Fehler beim Auslesen des Selects für das Datenbackup, wodurch es gelegentlich auf undefined gesetzt wird
- verhindern, dass mehrere Tasks auf den gleichen Timeslot angelegt werden
- anlegen von Lessons aus der Mockup-Datenbank
- Formular für Lessons implementieren
- Task-Methoden auf OOP umbauen
- Farbe und Inhalt des LessonMenus bei gecancelten Lessons ändern (keine Task für Ausfallstunden) 
- Lessons im Timetable bearbeitbar machen (auf Ausfall setzen, dazugehörige Tasks anlegen) 
    -> createTask in der TaskView fehlt
    -> setLessonCanceled in der LessonView fehlt
- bugs bei den responsive buttons beheben
- focus bei mehreren ungespeicherten Task Forms korrigieren
- task-Formular muss Möglichkeit bieten, sie als fest terminiert auszuweisen
- abgleich zwischen angezeigten lessons und tasks

- logik für das zeitliche verschieben von Tasks, wenn Stunden dazukommen oder wegfallen
    -> erledigt: sammle die betroffenen Tasks, die wandern dürfen, in einem Array
    -> noch offen: task das gleichen Termins rutschen auf den nächstmöglichen Termin, egal ob Vertretungs- oder reguläre Stunden...
        -> möglicher Ansatz: Stundentermine bis zur spätesten Task vorberechnen
            -> funktioniert, muss nur noch Einträge des regulären Stundenplans löschen, wenn diese Stunde in 
            den Lessonchanges als Ausfall vermert -> Funktion buggt in der if noch herum
            -> außerdem funktioniert die Berechnung der Tasktermine bei Ausfall noch nicht, Vertretung scheint
            weitestgehend zu funktionieren
- grüner Marker, wenn aktuelle Woche angezeigt wird
- Datum bei jedem Wochentag angezeigen
- Tasks werden nach dem Erstellen einer neuen Aufgabe neu sortiert
- Datumsanzeige bei Tasks einbauen
- Stunden sollen auch bearbeitet werden können

- Funktionen für Lessons deaktivieren, die in der Vergangenheit liegen

- persistente Datenschicht aufbauen:
   - Ajax-query-funktion
    - php-MVC zur Durchleitung der Daten
        - Controller für Task und Lesson
        - Model für Task und Lesson
    - PHP-Datenbank-Connector per PDO
- Bugfix: Task-Id wird infinity, wenn vorher keine Task angelegt ist
- sollten mehrere Stundenpläne in der Datenbank sein, können diese entsprechend ihres Gültigkeitsdatums dargestellt werden

- geschossene Bugs...
    - gecancelte Lessons bekommen keine Id im Frontend
    - bei Lesson Update kommen gecancelte und geänderte Lessons in der falschen Reihenfolge an (Logik angepasst, Frontend legt Id und damit die Reihenfolge in
    Datenbank fest)
    - Inkonsistenzen beim Datumsformat behoben, das JS ans Backend schickt -> formatDate-Funktion eingeführt
- Ajax-Anbindung für CRUD-Funktionen in den Models:
    - Lesson fertig (vorerst...)
    - Tasks lassen sich Speichern
    - Tasks lassen sich updaten
    - task in Progress setzen
    - setDone

- wird eine Stunde unabsichtlich bearbeitet, darf sie nicht aus dem Timetable verschwunden sein, wenn man das Formular schließt

- Einstellungsmenu: 
    - Fächer anlegen
        - Farben für Fächer auswählen
    - Stundenpläne darstellen
    - Stundenpläne durchklicken
    - Stundenplan anlegen
    - Stundenplan bearbeiten
    - Button, um Menü zu schließen
    - Tooltipps zur Erklärung
    - nölen, wenn versucht wird, einen Stundenplan anzulegen, obwohl keine Fächer angelegt sind
    - Stundenpläne nach Gültigkeitsdatum sortieren
    - wird einer neuer Stundenplan angelegt, muss beim vorhergehenden validUntil gesetzt werden


- CSS: Textfarbe für mintfarbene Stunden angepasst, dunkleres Mint eingeführt
- eigene Validierungslogik bauen

- wenn Fachname zu lang, overflow und Abkürzung durch drei Punkte
    - im Timetable
    - in den Tasks

- lesson-Datenstruktur überarbeitet: statt status und initialStatus gibt es jetzt lesson.type und lesson.setLessonCanceled
- Bug: wenn eine Lesson gecancelt und uncanceled wird, bleibt eine falsche Id zurück, die verhindert, dass die Lesson noch mal gecancelt werden kann

- Task-Sortierung ist kaputt:
    -> an neue Datenstruktur anpassen
    -> Kompatibilität zu mehreren gültigen und ungültigen Stundenplänen herstellen
    -> mit jedem neu angelegten Stundenplan müssen Tasks neu sortiert werden